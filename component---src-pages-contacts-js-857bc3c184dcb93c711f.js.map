{"version":3,"file":"component---src-pages-contacts-js-857bc3c184dcb93c711f.js","mappings":"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","sources":["webpack://portifolio_vitor/./src/components/Box/index.jsx","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/store/store.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/index.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","webpack://portifolio_vitor/./node_modules/@emailjs/browser/es/utils/validateForm/validateForm.js","webpack://portifolio_vitor/./src/pageComponents/GetInTouch/index.jsx","webpack://portifolio_vitor/./src/pages/contacts.js"],"sourcesContent":["import styled from 'styled-components'\r\nimport breakpoints from '../../breakpoints'\r\n\r\nconst Box = styled.div`\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n\r\n  @media screen and (max-width: ${breakpoints.desktop}) {\r\n    padding: 15px;\r\n  }\r\n\r\n  @media screen and (max-width: ${breakpoints.laptop}) {\r\n    padding: 10px;\r\n  }\r\n\r\n  @media screen and (max-width: ${breakpoints.tablet}) {\r\n    padding: 5px;\r\n  }\r\n`\r\n\r\nexport default Box\r\n","export const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = (id, throttle, localStorage) => {\n    const lastTime = Number(localStorage.getItem(id) || 0);\n    return throttle - Date.now() + lastTime;\n};\nconst removeRecord = (id, leftTime, localStorage) => {\n    setTimeout(() => {\n        localStorage.removeItem(id);\n    }, leftTime);\n};\nexport const isLimitRateHit = (localStorage, defaultID, options) => {\n    if (!options.throttle) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = getLeftTime(id, options.throttle, localStorage);\n    if (leftTime > 0) {\n        removeRecord(id, leftTime, localStorage);\n        return true;\n    }\n    localStorage.setItem(id, Date.now().toString());\n    removeRecord(id, options.throttle, localStorage);\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateForm } from '../../utils/validateForm/validateForm';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\nconst findHTMLForm = (form) => {\n    return typeof form === 'string' ? document.querySelector(form) : form;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    const currentForm = findHTMLForm(form);\n    validateParams(publicKey, serviceID, templateID);\n    validateForm(currentForm);\n    const formData = new FormData(currentForm);\n    if (isBlockedValueInParams(blockList, formData)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (isLimitRateHit(localStorage, location.pathname, limitRate)) {\n        return Promise.reject(limitRateError());\n    }\n    formData.append('lib_version', '4.1.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', publicKey);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","export const validateForm = (form) => {\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of the form';\n    }\n};\n","import React, { useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport emailjs from '@emailjs/browser'\r\nimport Box from '../../components/Box'\r\nimport breakpoints from '../../breakpoints'\r\n\r\nconst GetInTouch = () => {\r\n  const [validEmail, setValidEmail] = useState(true)\r\n  const form = useRef()\r\n\r\n  const sendEmail = (e) => {\r\n    e.preventDefault()\r\n\r\n    emailjs\r\n      .sendForm(\r\n        process.env.GATSBY_SERVICE_API,\r\n        process.env.GATSBY_TEMPLATE_API,\r\n        form.current,\r\n        {\r\n          publicKey: process.env.GATSBY_EMAILJS_API,\r\n        },\r\n      )\r\n      .then(\r\n        () => {\r\n          console.log('Success, looking forward to chatting to you soon!')\r\n          form.current.reset()\r\n        },\r\n        (error) => {\r\n          console.log('FAILED...', error.text)\r\n        },\r\n      )\r\n  }\r\n\r\n  const validateEmail = (email) => {\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n    return regex.test(email)\r\n  }\r\n\r\n  const handleEmailChange = (e) => {\r\n    setValidEmail(validateEmail(e.target.value))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Heading>\r\n          Say hello! It will be a pleasure to talk more about my professional\r\n          path. I'll get back to you shortly.\r\n        </Heading>\r\n        <Subheading>\r\n          Also, I'm always down for a chat about food, travels, and baseball!\r\n        </Subheading>\r\n      </Box>\r\n      <Wrapper>\r\n        <Form ref={form} onSubmit={sendEmail}>\r\n          <Label>Name</Label>\r\n          <Input type=\"text\" name=\"user_name\" required />\r\n          <Label>Email</Label>\r\n          <Input\r\n            type=\"email\"\r\n            name=\"user_email\"\r\n            onChange={handleEmailChange}\r\n            required\r\n          />\r\n          {!validEmail && (\r\n            <ErrorMessage>Please enter a valid email address.</ErrorMessage>\r\n          )}\r\n          <Label>Message</Label>\r\n          <Textarea name=\"message\" required />\r\n\r\n          <input type=\"submit\" value=\"Send\" />\r\n        </Form>\r\n      </Wrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Heading = styled.h1`\r\n  margin-top: 10rem;\r\n  color: white;\r\n  text-shadow: 1px 1px 2px black;\r\n  font-size: 3.1rem;\r\n  padding: 20px;\r\n\r\n  @media screen and (max-width: ${breakpoints.tablet}) {\r\n    font-size: 2.5rem;\r\n    margin-top: 1rem;\r\n  }\r\n`\r\n\r\nconst Subheading = styled.h3`\r\n  margin-top: 2rem;\r\n  color: white;\r\n  text-shadow: 1px 1px 2px black;\r\n  font-size: 1.4rem;\r\n  padding: 20px;\r\n\r\n  @media screen and (max-width: ${breakpoints.tablet}) {\r\n    font-size: 1.6rem;\r\n    margin-top: 1rem;\r\n  }\r\n`\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 68vh;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: ${breakpoints.tablet}) {\r\n    min-height: 40vh;\r\n    display: flex;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  input[type='submit'] {\r\n    margin-top: 2rem;\r\n    width: 50%;\r\n    height: 2rem;\r\n    cursor: pointer;\r\n    background: rgb(249, 105, 14);\r\n    color: white;\r\n    border: none;\r\n    border-radius: 20px;\r\n    font-weight: 600;\r\n    font-size: 1rem;\r\n  }\r\n`\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  width: 100%;\r\n  font-size: 16px;\r\n`\r\n\r\nconst Input = styled.input`\r\n  width: 50%;\r\n  height: 35px;\r\n  padding: 7px;\r\n  outline: none;\r\n  border-radius: 5px;\r\n  border: 1px solid rgb(220, 220, 220);\r\n\r\n  &:focus {\r\n    border: 2px solid rgba(0, 206, 158, 1);\r\n  }\r\n`\r\n\r\nconst Label = styled.label`\r\n  margin-top: 2rem;\r\n  font-size: 1.6rem;\r\n  color: white;\r\n  font-weight: 500;\r\n  text-shadow: 1px 1px 2px pink;\r\n`\r\n\r\nconst Textarea = styled.textarea`\r\n  width: 50%;\r\n  height: 16rem;\r\n`\r\n\r\nconst ErrorMessage = styled.span`\r\n  color: red;\r\n  font-size: 1.5rem;\r\n  margin-top: 14px;\r\n  text-shadow: 1px 1px 2px black;\r\n`\r\n\r\nexport default GetInTouch\r\n","import React from \"react\";\r\nimport GetInTouch from \"../pageComponents/GetInTouch\";\r\n\r\nconst ContactsPage = () => {\r\n  return <GetInTouch />;\r\n};\r\n\r\nexport default ContactsPage;\r\n\r\nexport const Head = () => <title>Get in touch - Vitor Dalbem Costa</title>;\r\n"],"names":["Box","styled","div","breakpoints","desktop","laptop","tablet","store","origin","blockHeadless","buildOptions","options","publicKey","toString","EmailJSResponseStatus","constructor","_status","_text","this","status","text","sendPost","async","url","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","length","headlessError","isBlockedValueInParams","params","list","watchVariable","isBlockListDisabled","Array","isArray","validateBlockListParams","value","name","FormData","get","includes","blockedEmailError","removeRecord","id","leftTime","localStorage","setTimeout","removeItem","isLimitRateHit","defaultID","throttle","validateLimitRateParams","lastTime","Number","getItem","Date","now","getLeftTime","setItem","limitRateError","form","opts","blockList","limitRate","Promise","reject","currentForm","document","querySelector","findHTMLForm","nodeName","validateForm","formData","location","pathname","append","Heading","h1","Subheading","h3","Wrapper","Form","Input","input","Label","label","Textarea","textarea","ErrorMessage","span","validEmail","setValidEmail","useState","useRef","ref","onSubmit","e","preventDefault","emailjs","process","current","then","console","log","reset","error","type","required","onChange","email","target","test","Head"],"sourceRoot":""}